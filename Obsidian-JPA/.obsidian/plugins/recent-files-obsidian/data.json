{
  "recentFiles": [
    {
      "basename": "0. INDEX - Config",
      "path": "0. Config/0. INDEX - Config.md"
    },
    {
      "basename": "Spring Boot의 JPA AutoConfigure",
      "path": "0. Config/1. JPA Config/Spring Boot의 JPA AutoConfigure.md"
    },
    {
      "basename": "1. Cascading",
      "path": "D. Command Design/1. Cascading.md"
    },
    {
      "basename": "0. INDEX - Command Design",
      "path": "D. Command Design/0. INDEX - Command Design.md"
    },
    {
      "basename": "Goal",
      "path": "Goal.md"
    },
    {
      "basename": "Target User(Interview)",
      "path": "Target User(Interview).md"
    },
    {
      "basename": "0. INDEX",
      "path": "0. INDEX.md"
    },
    {
      "basename": "2. optional",
      "path": "E. Query Design/2. optional.md"
    },
    {
      "basename": "0. INDEX - Query Design",
      "path": "E. Query Design/0. INDEX - Query Design.md"
    },
    {
      "basename": "1. findById vs getOne",
      "path": "C. Entity Associations/3. compare JPQL vs @Query vs QueryDSL/3. QueryDSL/1. findById vs getOne.md"
    },
    {
      "basename": "queryDSL",
      "path": "C. Entity Associations/3. compare JPQL vs @Query vs QueryDSL/3. QueryDSL/queryDSL.md"
    },
    {
      "basename": "2. JPQL Query",
      "path": "C. Entity Associations/3. compare JPQL vs @Query vs QueryDSL/2. Spring Data Query/2. JPQL Query.md"
    },
    {
      "basename": "1. Entity Manager",
      "path": "B. Entity Manager/4. Entity Manager/1. Entity Manager.md"
    },
    {
      "basename": "1.1 Entity Manager와 Spring Data Jpa",
      "path": "B. Entity Manager/2. Entity Status/1.1 Entity Manager와 Spring Data Jpa.md"
    },
    {
      "basename": "1. Entity Manager persist vs merge vs update",
      "path": "B. Entity Manager/2. Entity Status/1. Entity Manager persist vs merge vs update.md"
    },
    {
      "basename": "0. INDEX - Entity",
      "path": "A. Entity/0. INDEX - Entity.md"
    },
    {
      "basename": "3. Enum",
      "path": "A. Entity/5. Converter/1. Predefined Converter/3. Enum.md"
    },
    {
      "basename": "2. Date",
      "path": "A. Entity/5. Converter/1. Predefined Converter/2. Date.md"
    },
    {
      "basename": "1. Encrypt",
      "path": "A. Entity/5. Converter/1. Predefined Converter/1. Encrypt.md"
    },
    {
      "basename": "1.1 Serializable",
      "path": "A. Entity/3. Serializable/1.1 Serializable.md"
    },
    {
      "basename": "@Id 작성할 때의 핵심",
      "path": "A. Entity/2. @Id/@Id 작성할 때의 핵심.md"
    },
    {
      "basename": "@Entity vs @Table 주제의 핵심",
      "path": "A. Entity/1. @Entity vs @Table/@Entity vs @Table 주제의 핵심.md"
    },
    {
      "basename": "1. @JoinColumn",
      "path": "C. Entity Associations/1. @JoinColumn/1. @JoinColumn.md"
    },
    {
      "basename": "0. INDEX - Entity Manager",
      "path": "B. Entity Manager/0. INDEX - Entity Manager.md"
    },
    {
      "basename": "1. Hibernate Proxy",
      "path": "C. Entity Associations/1. @JoinColumn/3. Proxy/1. Hibernate Proxy.md"
    },
    {
      "basename": "Fetch 전략 Lazy vs Eager",
      "path": "C. Entity Associations/1. @JoinColumn/Fetch 전략 Lazy vs Eager.md"
    },
    {
      "basename": "기타 자주 사용하는 컨버터 추천",
      "path": "A. Entity/5. Converter/1. Predefined Converter/기타 자주 사용하는 컨버터 추천.md"
    },
    {
      "basename": "1.1 Associations",
      "path": "C. Entity Associations/2. Associations/1.1 Associations.md"
    },
    {
      "basename": "0. INDEX - Entity Associations",
      "path": "C. Entity Associations/0. INDEX - Entity Associations.md"
    },
    {
      "basename": "2.3 @ManyToMany",
      "path": "C. Entity Associations/2. Associations/2.3 @ManyToMany.md"
    },
    {
      "basename": "2.2 @OneToOne",
      "path": "C. Entity Associations/2. Associations/2.2 @OneToOne.md"
    },
    {
      "basename": "2.1 @OneToMany, @ManyToOne",
      "path": "C. Entity Associations/2. Associations/2.1 @OneToMany, @ManyToOne.md"
    },
    {
      "basename": "Strategic Design Overview",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/4. Strategic Design/Strategic Design Overview.md"
    },
    {
      "basename": "1. Large-Scale Structure",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/4. Strategic Design/3. Large-Scale Structure/1. Large-Scale Structure.md"
    },
    {
      "basename": "DDD Overview",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/DDD Overview.md"
    },
    {
      "basename": "3.1 Model Elements",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/3. Refactoring Toward Deeper Insight/3.1 Model Elements.md"
    },
    {
      "basename": "Deep Model",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/3. Refactoring Toward Deeper Insight/Deep Model.md"
    },
    {
      "basename": "Layered Architecture",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/2. The Building Blocks of a MDD/0. Layered Architecture/Layered Architecture.md"
    },
    {
      "basename": "3.1 Model vs Role",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/1. Putting Domain Model to Work/3.1 Model vs Role.md"
    },
    {
      "basename": "3. Model",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/1. Putting Domain Model to Work/3. Model.md"
    },
    {
      "basename": "1. Domain",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/1. Putting Domain Model to Work/1. Domain.md"
    },
    {
      "basename": "2. Ubiquitous Language",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/1. Putting Domain Model to Work/2. Ubiquitous Language.md"
    },
    {
      "basename": "1. UL로 논의해서 나오는 결과물",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/1. Putting Domain Model to Work/Ubiquitous Language Example/UL to Docs/1. UL로 논의해서 나오는 결과물.md"
    },
    {
      "basename": "3. Ubiquitous Language의 문서화",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/1. Putting Domain Model to Work/Ubiquitous Language Example/UL to Docs/3. Ubiquitous Language의 문서화.md"
    },
    {
      "basename": "Business Rules vs Business Policy",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/1. Putting Domain Model to Work/Ubiquitous Language Example/UL to Docs/Business Rules vs Business Policy.md"
    },
    {
      "basename": "2.4 Ubiquitous에서 Model을 정제하는 법",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/1. Putting Domain Model to Work/Ubiquitous Language Example/UL to Model/2.4 Ubiquitous에서 Model을 정제하는 법.md"
    },
    {
      "basename": "2.3 Ubiquitous Languages를 Code로 변환",
      "path": "2. Programming Languages/1. Practical OOP/4. DDD/1. Putting Domain Model to Work/Ubiquitous Language Example/UL to Model/2.3 Ubiquitous Languages를 Code로 변환.md"
    }
  ],
  "omittedPaths": [
    ""
  ]
}